{"expireTime":9007200825385962000,"key":"gatsby-plugin-mdx-entire-payload-dfe54cba78de7438f25b25c7a115b591-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":3,"children":[{"type":"text","value":"What is a hash function?","position":{"start":{"line":1,"column":5,"offset":4},"end":{"line":1,"column":29,"offset":28},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":29,"offset":28},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A hash is a fixed-size alphanumeric string. The string is called the hash value. Often also seen as a “copy” or “fingerprint” of the original data. Most often a 256 SHA 32-bit algorithm is used which is almost a standard to generate such hashes.","position":{"start":{"line":2,"column":1,"offset":29},"end":{"line":2,"column":246,"offset":274},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":29},"end":{"line":2,"column":246,"offset":274},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"How do I hash my customers’ data before I send it to Cryptowerk?","position":{"start":{"line":4,"column":5,"offset":280},"end":{"line":4,"column":69,"offset":344},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":276},"end":{"line":4,"column":69,"offset":344},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are a variety of open source and public hashing utilities available, including this simple upload-based one. Cryptowerk does not take a stance on which ones to specifically recommend.","position":{"start":{"line":5,"column":1,"offset":345},"end":{"line":5,"column":190,"offset":534},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":345},"end":{"line":5,"column":190,"offset":534},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Which hash algorithms do you support?","position":{"start":{"line":7,"column":5,"offset":540},"end":{"line":7,"column":42,"offset":577},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":536},"end":{"line":7,"column":42,"offset":577},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We recommend the use of SHA-256 (Secure Hashing Algorithm) to generate hashes but also support hashes created by a compatible hashing utility.","position":{"start":{"line":8,"column":1,"offset":578},"end":{"line":8,"column":143,"offset":720},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":578},"end":{"line":8,"column":143,"offset":720},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Hashing Data\",\"metaTitle\":\"FAQ - Hashing Data\",\"metaDescription\":\"Cryptowerk FAQ - Hashing Data\"}","position":{"start":{"line":11,"column":1,"offset":723},"end":{"line":11,"column":136,"offset":858},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":11,"column":136,"offset":858}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Hashing Data\",\n  \"metaTitle\": \"FAQ - Hashing Data\",\n  \"metaDescription\": \"Cryptowerk FAQ - Hashing Data\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"What is a hash function?\"), mdx(\"p\", null, \"A hash is a fixed-size alphanumeric string. The string is called the hash value. Often also seen as a \\u201Ccopy\\u201D or \\u201Cfingerprint\\u201D of the original data. Most often a 256 SHA 32-bit algorithm is used which is almost a standard to generate such hashes.\"), mdx(\"h3\", null, \"How do I hash my customers\\u2019 data before I send it to Cryptowerk?\"), mdx(\"p\", null, \"There are a variety of open source and public hashing utilities available, including this simple upload-based one. Cryptowerk does not take a stance on which ones to specifically recommend.\"), mdx(\"h3\", null, \"Which hash algorithms do you support?\"), mdx(\"p\", null, \"We recommend the use of SHA-256 (Secure Hashing Algorithm) to generate hashes but also support hashes created by a compatible hashing utility.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Hashing Data\",\n  \"metaTitle\": \"FAQ - Hashing Data\",\n  \"metaDescription\": \"Cryptowerk FAQ - Hashing Data\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h3>{`What is a hash function?`}</h3>\n    <p>{`A hash is a fixed-size alphanumeric string. The string is called the hash value. Often also seen as a “copy” or “fingerprint” of the original data. Most often a 256 SHA 32-bit algorithm is used which is almost a standard to generate such hashes.`}</p>\n    <h3>{`How do I hash my customers’ data before I send it to Cryptowerk?`}</h3>\n    <p>{`There are a variety of open source and public hashing utilities available, including this simple upload-based one. Cryptowerk does not take a stance on which ones to specifically recommend.`}</p>\n    <h3>{`Which hash algorithms do you support?`}</h3>\n    <p>{`We recommend the use of SHA-256 (Secure Hashing Algorithm) to generate hashes but also support hashes created by a compatible hashing utility.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}