{"expireTime":9007200825385962000,"key":"gatsby-plugin-mdx-entire-payload-628289203836182b683db86c835f5873-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":11,"offset":10},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":11,"offset":10},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Cryptowerk Horizon API writes hashes of data into the Bitcoin and Ethereum blockchain by default. Hashes will be submitted in the ","position":{"start":{"line":2,"column":1,"offset":11},"end":{"line":2,"column":131,"offset":141},"indent":[]}},{"type":"inlineCode","value":"/register","position":{"start":{"line":2,"column":131,"offset":141},"end":{"line":2,"column":142,"offset":152},"indent":[]}},{"type":"text","value":" call and the result contains a unique retrieval-ID. Cryptowerk bundles the collected\nhashes and creates a single super-hash. This super-hash is then anchored into the blockchains of your choosing. After the super-hash has been anchored in one or more blockchains, the retrieval-ID may be exchanged for a Seal. A Seal contains the information necessary to prove that a hash was written to a blockchain.","position":{"start":{"line":2,"column":142,"offset":152},"end":{"line":3,"column":317,"offset":554},"indent":[1]}}],"position":{"start":{"line":2,"column":1,"offset":11},"end":{"line":3,"column":317,"offset":554},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The flows supported by this API are:","position":{"start":{"line":5,"column":1,"offset":556},"end":{"line":5,"column":37,"offset":592},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":556},"end":{"line":5,"column":37,"offset":592},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Hash  -->  retrieval-ID  -->  Seal","position":{"start":{"line":7,"column":1,"offset":594},"end":{"line":7,"column":35,"offset":628},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":594},"end":{"line":7,"column":35,"offset":628},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"What you will indeed","position":{"start":{"line":9,"column":4,"offset":633},"end":{"line":9,"column":24,"offset":653},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":630},"end":{"line":9,"column":24,"offset":653},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Cryptowerk Horizon API credentials","position":{"start":{"line":10,"column":4,"offset":657},"end":{"line":10,"column":38,"offset":691},"indent":[]}}],"position":{"start":{"line":10,"column":4,"offset":657},"end":{"line":10,"column":38,"offset":691},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":654},"end":{"line":10,"column":38,"offset":691},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Terminal or Command Prompt access","position":{"start":{"line":11,"column":4,"offset":695},"end":{"line":11,"column":37,"offset":728},"indent":[]}}],"position":{"start":{"line":11,"column":4,"offset":695},"end":{"line":11,"column":37,"offset":728},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":692},"end":{"line":11,"column":37,"offset":728},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":654},"end":{"line":11,"column":37,"offset":728},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Getting Started","position":{"start":{"line":13,"column":3,"offset":732},"end":{"line":13,"column":18,"offset":747},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":730},"end":{"line":13,"column":18,"offset":747},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"API Key and Credentials","position":{"start":{"line":14,"column":4,"offset":751},"end":{"line":14,"column":27,"offset":774},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":748},"end":{"line":14,"column":27,"offset":774},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Sign-up or Login","position":{"start":{"line":15,"column":1,"offset":775},"end":{"line":15,"column":17,"offset":791},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":775},"end":{"line":15,"column":17,"offset":791},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Select the ","position":{"start":{"line":17,"column":1,"offset":793},"end":{"line":17,"column":12,"offset":804},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Account menu","position":{"start":{"line":17,"column":14,"offset":806},"end":{"line":17,"column":26,"offset":818},"indent":[]}}],"position":{"start":{"line":17,"column":12,"offset":804},"end":{"line":17,"column":28,"offset":820},"indent":[]}},{"type":"text","value":" and locate the API Key and Secret Credential. Save these two values with a ","position":{"start":{"line":17,"column":28,"offset":820},"end":{"line":17,"column":104,"offset":896},"indent":[]}},{"type":"jsx","value":"<span style=\"font-size:larger;\">","position":{"start":{"line":17,"column":104,"offset":896},"end":{"line":17,"column":136,"offset":928},"indent":[]}},{"type":"strong","children":[{"type":"emphasis","children":[{"type":"text","value":"space","position":{"start":{"line":17,"column":139,"offset":931},"end":{"line":17,"column":144,"offset":936},"indent":[]}}],"position":{"start":{"line":17,"column":138,"offset":930},"end":{"line":17,"column":145,"offset":937},"indent":[]}}],"position":{"start":{"line":17,"column":136,"offset":928},"end":{"line":17,"column":147,"offset":939},"indent":[]}},{"type":"jsx","value":"</span>","position":{"start":{"line":17,"column":147,"offset":939},"end":{"line":17,"column":154,"offset":946},"indent":[]}},{"type":"text","value":" in between them. You can only view the credentials once.","position":{"start":{"line":17,"column":154,"offset":946},"end":{"line":17,"column":211,"offset":1003},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":793},"end":{"line":17,"column":211,"offset":1003},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":19,"column":1,"offset":1005},"end":{"line":19,"column":2,"offset":1006},"indent":[]}},{"type":"image","title":null,"url":"./quickstart-img1.png","alt":"get api key","position":{"start":{"line":19,"column":2,"offset":1006},"end":{"line":19,"column":39,"offset":1043},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":1005},"end":{"line":19,"column":39,"offset":1043},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The apiKey is visible and the yourAPICredential is secret and may only be accessed once.","position":{"start":{"line":21,"column":1,"offset":1045},"end":{"line":21,"column":89,"offset":1133},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1045},"end":{"line":21,"column":89,"offset":1133},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Hash The data","position":{"start":{"line":23,"column":4,"offset":1138},"end":{"line":23,"column":17,"offset":1151},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1135},"end":{"line":23,"column":17,"offset":1151},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A cryptographic hash is like a fingerprint. It is a mathematical algorithm that takes data of any size turns it into a unique fixed size string of values. Cryptowerk uses these so called hashes to create ","position":{"start":{"line":24,"column":1,"offset":1152},"end":{"line":24,"column":205,"offset":1356},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"seals","position":{"start":{"line":24,"column":207,"offset":1358},"end":{"line":24,"column":212,"offset":1363},"indent":[]}}],"position":{"start":{"line":24,"column":205,"offset":1356},"end":{"line":24,"column":214,"offset":1365},"indent":[]}},{"type":"text","value":" for digital assets.\nOpen a command line terminal","position":{"start":{"line":24,"column":214,"offset":1365},"end":{"line":25,"column":29,"offset":1414},"indent":[1]}}],"position":{"start":{"line":24,"column":1,"offset":1152},"end":{"line":25,"column":29,"offset":1414},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"echo -n \"simple text\" | shasum -a 256\n\nCreates Hash: \"2609c7c28788898a337c063ff1c3b92275832bddeda014a790d109fad3ba85e2\"","position":{"start":{"line":27,"column":1,"offset":1416},"end":{"line":31,"column":4,"offset":1543},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Call Register API with Hashes","position":{"start":{"line":33,"column":4,"offset":1548},"end":{"line":33,"column":33,"offset":1577},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1545},"end":{"line":33,"column":33,"offset":1577},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using the values from step 1 and 2 open a terminal and enter","position":{"start":{"line":34,"column":1,"offset":1578},"end":{"line":34,"column":61,"offset":1638},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1578},"end":{"line":34,"column":61,"offset":1638},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"curl -sS \\\n--header \"X-ApiKey: +jR2fbECXo7rDIRrPL9otvIkn54G7+kF9b1LvNe/kOg= wZ2vV5kYfDGEFsyXVZwSHBjN1TfzQovZE340hnsCRWk=\" \\\n--data \"hashes=2609c7c28788898a337c063ff1c3b92275832bddeda014a790d109fad3ba85e2\" \\\nhttps://developers.cryptowerk.com/platform/API/v8/register","position":{"start":{"line":35,"column":1,"offset":1639},"end":{"line":40,"column":4,"offset":1912},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The retrieval-ID for each hash can be found in the response JSON of a sucessful ","position":{"start":{"line":41,"column":1,"offset":1913},"end":{"line":41,"column":81,"offset":1993},"indent":[]}},{"type":"inlineCode","value":"/register","position":{"start":{"line":41,"column":81,"offset":1993},"end":{"line":41,"column":92,"offset":2004},"indent":[]}},{"type":"text","value":" call.","position":{"start":{"line":41,"column":92,"offset":2004},"end":{"line":41,"column":98,"offset":2010},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1913},"end":{"line":41,"column":98,"offset":2010},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"{\n  \"maxSupportedAPIVersion\":8,\n  \"documents\":[\n    {\"retrievalId\":\"ri323399645982466fe76eb43010c7f5572c4182e711bfae9f8db9b2407f85a648c\"}\n    ],\n  \"minSupportedAPIVersion\":1\n}","position":{"start":{"line":42,"column":1,"offset":2011},"end":{"line":50,"column":4,"offset":2194},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are several approaches to retrieve the Seal but here we will focus on the simplest.","position":{"start":{"line":51,"column":1,"offset":2195},"end":{"line":51,"column":90,"offset":2284},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":2195},"end":{"line":51,"column":90,"offset":2284},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Polling for Seal","position":{"start":{"line":53,"column":4,"offset":2289},"end":{"line":53,"column":20,"offset":2305},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":2286},"end":{"line":53,"column":20,"offset":2305},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Call ","position":{"start":{"line":54,"column":1,"offset":2306},"end":{"line":54,"column":6,"offset":2311},"indent":[]}},{"type":"inlineCode","value":"/verify","position":{"start":{"line":54,"column":6,"offset":2311},"end":{"line":54,"column":15,"offset":2320},"indent":[]}},{"type":"text","value":" and provide the retrievalID(s) then check for the return value.","position":{"start":{"line":54,"column":15,"offset":2320},"end":{"line":54,"column":79,"offset":2384},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":2306},"end":{"line":54,"column":79,"offset":2384},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"curl -sS \\\n--header \"X-ApiKey: +jR2fbECXo7rDIRrPL9otvIkn54G7+kF9b1LvNe/kOg= wZ2vV5kYfDGEFsyXVZwSHBjN1TfzQovZE340hnsCRWk=\" \\\n--data \"retrievalId=ri323399645982466fe76eb43010c7f5572c4182e711bfae9f8db9b2407f85a648c\" \\\nhttps://developers.cryptowerk.com/platform/API/v8/verify","position":{"start":{"line":56,"column":1,"offset":2386},"end":{"line":61,"column":4,"offset":2665},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For each retrieval-ID (i.e. each hash) a Seal is returned in the response JSON of a successful ","position":{"start":{"line":62,"column":1,"offset":2666},"end":{"line":62,"column":96,"offset":2761},"indent":[]}},{"type":"inlineCode","value":"/verify","position":{"start":{"line":62,"column":96,"offset":2761},"end":{"line":62,"column":105,"offset":2770},"indent":[]}},{"type":"text","value":" call. A Seal contains Proofs. A Proof is a set of instructions for calculating and locating the anchor-hash that was  written as a transaction in a block of a blockchain. There is a Proof for each blockchain that gets written to. A Seal may contain one or more Proofs depending on the number of blockchains you are writing to and the exact timing of each confirmation.","position":{"start":{"line":62,"column":105,"offset":2770},"end":{"line":62,"column":474,"offset":3139},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2666},"end":{"line":62,"column":474,"offset":3139},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"{\n  \"maxSupportedAPIVersion\": 8,\n  \"documents\": [{\n    \"retrievalId\": \"ri323399645982466fe76eb43010c7f5572c4182e711bfae9f8db9b2407f85a648c\",\n    \"seal\": {\n      \"documentInfo\": {\n        \"submittedAt\": 1570585798468\n      },\n      \"proofs\": [{\n        \"bundleMethod\": \"BALANCED_MERKLE_TREE\",\n        \"operations\": [{\n          \"blockChainId\": \"0x7f435eb59c1ece1d938cf9572c485a6e7208267b972c4a504945485951041443\",\n          \"instanceName\": \"4\",\n          \"insertedIntoBlockchainAt\": 1570585861800,\n          \"opcode\": \"BLOCKCHAIN\",\n          \"blockchainGeneralName\": \"Ethereum\"\n        }, {\n          \"docHash\": \"2609c7c28788898a337c063ff1c3b92275832bddeda014a790d109fad3ba85e2\",\n          \"opcode\": \"DOC_SHA256\"\n        }, {\n          \"opcode\": \"APPEND_THEN_SHA256\",\n          \"hash\": \"9c81d330a82cc58dafdab97093d841f5fa8f92d77eac54d0f1a23b22c2d187a3\"\n        }, {\n          \"opcode\": \"ANCHOR_SHA256\",\n          \"hash\": \"51fba877fcf44c28a44d81358e27425c06253964813b5277a183f894de5df22f\"\n        }]\n      }],\n      \"version\": 8,\n      \"isComplete\": false\n    },\n    \"submittedAt\": 1570585798468,\n    \"hasBeenInsertedIntoAtLeastOneBlockchain\": true,\n    \"blockchainRegistrations\": [{\n      \"blockChainId\": \"0x7f435eb59c1ece1d938cf9572c485a6e7208267b972c4a504945485951041443\",\n      \"insertedIntoBlockchainAt\": 1570585861800,\n      \"blockChainDesc\": {\n        \"instanceName\": \"4\",\n        \"generalName\": \"Ethereum\"\n      },\n      \"status\": {\n        \"anchorHash\": \"51fba877fcf44c28a44d81358e27425c06253964813b5277a183f894de5df22f\"\n      }\n    }],\n    \"hasBeenInsertedIntoAllRequestedBlockchains\": false\n  }],\n  \"minSupportedAPIVersion\": 1\n}","position":{"start":{"line":63,"column":1,"offset":3140},"end":{"line":111,"column":4,"offset":4785},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Above you will notice this Seal contains one Proof for the Etherium blockchain. You may also notice that not all the requested blockchains have been written to yet. Blockchains often have different heartbeats at which they write and confirm transactions and blocks. Re-Polling the API ","position":{"start":{"line":112,"column":1,"offset":4786},"end":{"line":112,"column":286,"offset":5071},"indent":[]}},{"type":"inlineCode","value":"/verify","position":{"start":{"line":112,"column":286,"offset":5071},"end":{"line":112,"column":295,"offset":5080},"indent":[]}},{"type":"text","value":" call will return the Seal with all the Proofs that have been confirmed at that time of the API call.","position":{"start":{"line":112,"column":295,"offset":5080},"end":{"line":112,"column":396,"offset":5181},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":4786},"end":{"line":112,"column":396,"offset":5181},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Quick Start\",\"metaTitle\":\"Getting Started with Cryptowerk Horizon API\",\"metaDescription\":\"Getting Started with Cryptowerk Horizon API\"}","position":{"start":{"line":115,"column":1,"offset":5184},"end":{"line":115,"column":174,"offset":5357},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":115,"column":174,"offset":5357}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Quick Start\",\n  \"metaTitle\": \"Getting Started with Cryptowerk Horizon API\",\n  \"metaDescription\": \"Getting Started with Cryptowerk Horizon API\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Overview\"), mdx(\"p\", null, \"Cryptowerk Horizon API writes hashes of data into the Bitcoin and Ethereum blockchain by default. Hashes will be submitted in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/register\"), \" call and the result contains a unique retrieval-ID. Cryptowerk bundles the collected\\nhashes and creates a single super-hash. This super-hash is then anchored into the blockchains of your choosing. After the super-hash has been anchored in one or more blockchains, the retrieval-ID may be exchanged for a Seal. A Seal contains the information necessary to prove that a hash was written to a blockchain.\"), mdx(\"p\", null, \"The flows supported by this API are:\"), mdx(\"p\", null, \"Hash  -->  retrieval-ID  -->  Seal\"), mdx(\"h2\", null, \"What you will indeed\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptowerk Horizon API credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Terminal or Command Prompt access\")), mdx(\"h1\", null, \"Getting Started\"), mdx(\"h2\", null, \"API Key and Credentials\"), mdx(\"p\", null, \"Sign-up or Login\"), mdx(\"p\", null, \"Select the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Account menu\"), \" and locate the API Key and Secret Credential. Save these two values with a \", mdx(\"span\", {\n    style: {\n      \"fontSize\": \"larger\"\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"space\"))), \" in between them. You can only view the credentials once.\"), mdx(\"p\", null, \" \", mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"./quickstart-img1.png\",\n    \"alt\": \"get api key\"\n  }))), mdx(\"p\", null, \"The apiKey is visible and the yourAPICredential is secret and may only be accessed once.\"), mdx(\"h2\", null, \"Hash The data\"), mdx(\"p\", null, \"A cryptographic hash is like a fingerprint. It is a mathematical algorithm that takes data of any size turns it into a unique fixed size string of values. Cryptowerk uses these so called hashes to create \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"seals\"), \" for digital assets.\\nOpen a command line terminal\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"echo -n \\\"simple text\\\" | shasum -a 256\\n\\nCreates Hash: \\\"2609c7c28788898a337c063ff1c3b92275832bddeda014a790d109fad3ba85e2\\\"\\n\")), mdx(\"h2\", null, \"Call Register API with Hashes\"), mdx(\"p\", null, \"Using the values from step 1 and 2 open a terminal and enter\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"curl -sS \\\\\\n--header \\\"X-ApiKey: +jR2fbECXo7rDIRrPL9otvIkn54G7+kF9b1LvNe/kOg= wZ2vV5kYfDGEFsyXVZwSHBjN1TfzQovZE340hnsCRWk=\\\" \\\\\\n--data \\\"hashes=2609c7c28788898a337c063ff1c3b92275832bddeda014a790d109fad3ba85e2\\\" \\\\\\nhttps://developers.cryptowerk.com/platform/API/v8/register\\n\")), mdx(\"p\", null, \"The retrieval-ID for each hash can be found in the response JSON of a sucessful \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/register\"), \" call.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"{\\n  \\\"maxSupportedAPIVersion\\\":8,\\n  \\\"documents\\\":[\\n    {\\\"retrievalId\\\":\\\"ri323399645982466fe76eb43010c7f5572c4182e711bfae9f8db9b2407f85a648c\\\"}\\n    ],\\n  \\\"minSupportedAPIVersion\\\":1\\n}\\n\")), mdx(\"p\", null, \"There are several approaches to retrieve the Seal but here we will focus on the simplest.\"), mdx(\"h2\", null, \"Polling for Seal\"), mdx(\"p\", null, \"Call \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/verify\"), \" and provide the retrievalID(s) then check for the return value.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"curl -sS \\\\\\n--header \\\"X-ApiKey: +jR2fbECXo7rDIRrPL9otvIkn54G7+kF9b1LvNe/kOg= wZ2vV5kYfDGEFsyXVZwSHBjN1TfzQovZE340hnsCRWk=\\\" \\\\\\n--data \\\"retrievalId=ri323399645982466fe76eb43010c7f5572c4182e711bfae9f8db9b2407f85a648c\\\" \\\\\\nhttps://developers.cryptowerk.com/platform/API/v8/verify\\n\")), mdx(\"p\", null, \"For each retrieval-ID (i.e. each hash) a Seal is returned in the response JSON of a successful \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/verify\"), \" call. A Seal contains Proofs. A Proof is a set of instructions for calculating and locating the anchor-hash that was  written as a transaction in a block of a blockchain. There is a Proof for each blockchain that gets written to. A Seal may contain one or more Proofs depending on the number of blockchains you are writing to and the exact timing of each confirmation.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"{\\n  \\\"maxSupportedAPIVersion\\\": 8,\\n  \\\"documents\\\": [{\\n    \\\"retrievalId\\\": \\\"ri323399645982466fe76eb43010c7f5572c4182e711bfae9f8db9b2407f85a648c\\\",\\n    \\\"seal\\\": {\\n      \\\"documentInfo\\\": {\\n        \\\"submittedAt\\\": 1570585798468\\n      },\\n      \\\"proofs\\\": [{\\n        \\\"bundleMethod\\\": \\\"BALANCED_MERKLE_TREE\\\",\\n        \\\"operations\\\": [{\\n          \\\"blockChainId\\\": \\\"0x7f435eb59c1ece1d938cf9572c485a6e7208267b972c4a504945485951041443\\\",\\n          \\\"instanceName\\\": \\\"4\\\",\\n          \\\"insertedIntoBlockchainAt\\\": 1570585861800,\\n          \\\"opcode\\\": \\\"BLOCKCHAIN\\\",\\n          \\\"blockchainGeneralName\\\": \\\"Ethereum\\\"\\n        }, {\\n          \\\"docHash\\\": \\\"2609c7c28788898a337c063ff1c3b92275832bddeda014a790d109fad3ba85e2\\\",\\n          \\\"opcode\\\": \\\"DOC_SHA256\\\"\\n        }, {\\n          \\\"opcode\\\": \\\"APPEND_THEN_SHA256\\\",\\n          \\\"hash\\\": \\\"9c81d330a82cc58dafdab97093d841f5fa8f92d77eac54d0f1a23b22c2d187a3\\\"\\n        }, {\\n          \\\"opcode\\\": \\\"ANCHOR_SHA256\\\",\\n          \\\"hash\\\": \\\"51fba877fcf44c28a44d81358e27425c06253964813b5277a183f894de5df22f\\\"\\n        }]\\n      }],\\n      \\\"version\\\": 8,\\n      \\\"isComplete\\\": false\\n    },\\n    \\\"submittedAt\\\": 1570585798468,\\n    \\\"hasBeenInsertedIntoAtLeastOneBlockchain\\\": true,\\n    \\\"blockchainRegistrations\\\": [{\\n      \\\"blockChainId\\\": \\\"0x7f435eb59c1ece1d938cf9572c485a6e7208267b972c4a504945485951041443\\\",\\n      \\\"insertedIntoBlockchainAt\\\": 1570585861800,\\n      \\\"blockChainDesc\\\": {\\n        \\\"instanceName\\\": \\\"4\\\",\\n        \\\"generalName\\\": \\\"Ethereum\\\"\\n      },\\n      \\\"status\\\": {\\n        \\\"anchorHash\\\": \\\"51fba877fcf44c28a44d81358e27425c06253964813b5277a183f894de5df22f\\\"\\n      }\\n    }],\\n    \\\"hasBeenInsertedIntoAllRequestedBlockchains\\\": false\\n  }],\\n  \\\"minSupportedAPIVersion\\\": 1\\n}\\n\")), mdx(\"p\", null, \"Above you will notice this Seal contains one Proof for the Etherium blockchain. You may also notice that not all the requested blockchains have been written to yet. Blockchains often have different heartbeats at which they write and confirm transactions and blocks. Re-Polling the API \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/verify\"), \" call will return the Seal with all the Proofs that have been confirmed at that time of the API call.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Quick Start\",\n  \"metaTitle\": \"Getting Started with Cryptowerk Horizon API\",\n  \"metaDescription\": \"Getting Started with Cryptowerk Horizon API\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Overview`}</h1>\n    <p>{`Cryptowerk Horizon API writes hashes of data into the Bitcoin and Ethereum blockchain by default. Hashes will be submitted in the `}<inlineCode parentName=\"p\">{`/register`}</inlineCode>{` call and the result contains a unique retrieval-ID. Cryptowerk bundles the collected\nhashes and creates a single super-hash. This super-hash is then anchored into the blockchains of your choosing. After the super-hash has been anchored in one or more blockchains, the retrieval-ID may be exchanged for a Seal. A Seal contains the information necessary to prove that a hash was written to a blockchain.`}</p>\n    <p>{`The flows supported by this API are:`}</p>\n    <p>{`Hash  -->  retrieval-ID  -->  Seal`}</p>\n    <h2>{`What you will indeed`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Cryptowerk Horizon API credentials`}</li>\n      <li parentName=\"ul\">{`Terminal or Command Prompt access`}</li>\n    </ul>\n    <h1>{`Getting Started`}</h1>\n    <h2>{`API Key and Credentials`}</h2>\n    <p>{`Sign-up or Login`}</p>\n    <p>{`Select the `}<strong parentName=\"p\">{`Account menu`}</strong>{` and locate the API Key and Secret Credential. Save these two values with a `}<span style=\"font-size:larger;\"><strong parentName=\"p\"><em parentName=\"strong\">{`space`}</em></strong></span>{` in between them. You can only view the credentials once.`}</p>\n    <p>{` `}<img parentName=\"p\" {...{\n        \"src\": \"./quickstart-img1.png\",\n        \"alt\": \"get api key\"\n      }}></img></p>\n    <p>{`The apiKey is visible and the yourAPICredential is secret and may only be accessed once.`}</p>\n    <h2>{`Hash The data`}</h2>\n    <p>{`A cryptographic hash is like a fingerprint. It is a mathematical algorithm that takes data of any size turns it into a unique fixed size string of values. Cryptowerk uses these so called hashes to create `}<strong parentName=\"p\">{`seals`}</strong>{` for digital assets.\nOpen a command line terminal`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`echo -n \"simple text\" | shasum -a 256\n\nCreates Hash: \"2609c7c28788898a337c063ff1c3b92275832bddeda014a790d109fad3ba85e2\"\n`}</code></pre>\n    <h2>{`Call Register API with Hashes`}</h2>\n    <p>{`Using the values from step 1 and 2 open a terminal and enter`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl -sS \\\\\n--header \"X-ApiKey: +jR2fbECXo7rDIRrPL9otvIkn54G7+kF9b1LvNe/kOg= wZ2vV5kYfDGEFsyXVZwSHBjN1TfzQovZE340hnsCRWk=\" \\\\\n--data \"hashes=2609c7c28788898a337c063ff1c3b92275832bddeda014a790d109fad3ba85e2\" \\\\\nhttps://developers.cryptowerk.com/platform/API/v8/register\n`}</code></pre>\n    <p>{`The retrieval-ID for each hash can be found in the response JSON of a sucessful `}<inlineCode parentName=\"p\">{`/register`}</inlineCode>{` call.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  \"maxSupportedAPIVersion\":8,\n  \"documents\":[\n    {\"retrievalId\":\"ri323399645982466fe76eb43010c7f5572c4182e711bfae9f8db9b2407f85a648c\"}\n    ],\n  \"minSupportedAPIVersion\":1\n}\n`}</code></pre>\n    <p>{`There are several approaches to retrieve the Seal but here we will focus on the simplest.`}</p>\n    <h2>{`Polling for Seal`}</h2>\n    <p>{`Call `}<inlineCode parentName=\"p\">{`/verify`}</inlineCode>{` and provide the retrievalID(s) then check for the return value.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl -sS \\\\\n--header \"X-ApiKey: +jR2fbECXo7rDIRrPL9otvIkn54G7+kF9b1LvNe/kOg= wZ2vV5kYfDGEFsyXVZwSHBjN1TfzQovZE340hnsCRWk=\" \\\\\n--data \"retrievalId=ri323399645982466fe76eb43010c7f5572c4182e711bfae9f8db9b2407f85a648c\" \\\\\nhttps://developers.cryptowerk.com/platform/API/v8/verify\n`}</code></pre>\n    <p>{`For each retrieval-ID (i.e. each hash) a Seal is returned in the response JSON of a successful `}<inlineCode parentName=\"p\">{`/verify`}</inlineCode>{` call. A Seal contains Proofs. A Proof is a set of instructions for calculating and locating the anchor-hash that was  written as a transaction in a block of a blockchain. There is a Proof for each blockchain that gets written to. A Seal may contain one or more Proofs depending on the number of blockchains you are writing to and the exact timing of each confirmation.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  \"maxSupportedAPIVersion\": 8,\n  \"documents\": [{\n    \"retrievalId\": \"ri323399645982466fe76eb43010c7f5572c4182e711bfae9f8db9b2407f85a648c\",\n    \"seal\": {\n      \"documentInfo\": {\n        \"submittedAt\": 1570585798468\n      },\n      \"proofs\": [{\n        \"bundleMethod\": \"BALANCED_MERKLE_TREE\",\n        \"operations\": [{\n          \"blockChainId\": \"0x7f435eb59c1ece1d938cf9572c485a6e7208267b972c4a504945485951041443\",\n          \"instanceName\": \"4\",\n          \"insertedIntoBlockchainAt\": 1570585861800,\n          \"opcode\": \"BLOCKCHAIN\",\n          \"blockchainGeneralName\": \"Ethereum\"\n        }, {\n          \"docHash\": \"2609c7c28788898a337c063ff1c3b92275832bddeda014a790d109fad3ba85e2\",\n          \"opcode\": \"DOC_SHA256\"\n        }, {\n          \"opcode\": \"APPEND_THEN_SHA256\",\n          \"hash\": \"9c81d330a82cc58dafdab97093d841f5fa8f92d77eac54d0f1a23b22c2d187a3\"\n        }, {\n          \"opcode\": \"ANCHOR_SHA256\",\n          \"hash\": \"51fba877fcf44c28a44d81358e27425c06253964813b5277a183f894de5df22f\"\n        }]\n      }],\n      \"version\": 8,\n      \"isComplete\": false\n    },\n    \"submittedAt\": 1570585798468,\n    \"hasBeenInsertedIntoAtLeastOneBlockchain\": true,\n    \"blockchainRegistrations\": [{\n      \"blockChainId\": \"0x7f435eb59c1ece1d938cf9572c485a6e7208267b972c4a504945485951041443\",\n      \"insertedIntoBlockchainAt\": 1570585861800,\n      \"blockChainDesc\": {\n        \"instanceName\": \"4\",\n        \"generalName\": \"Ethereum\"\n      },\n      \"status\": {\n        \"anchorHash\": \"51fba877fcf44c28a44d81358e27425c06253964813b5277a183f894de5df22f\"\n      }\n    }],\n    \"hasBeenInsertedIntoAllRequestedBlockchains\": false\n  }],\n  \"minSupportedAPIVersion\": 1\n}\n`}</code></pre>\n    <p>{`Above you will notice this Seal contains one Proof for the Etherium blockchain. You may also notice that not all the requested blockchains have been written to yet. Blockchains often have different heartbeats at which they write and confirm transactions and blocks. Re-Polling the API `}<inlineCode parentName=\"p\">{`/verify`}</inlineCode>{` call will return the Seal with all the Proofs that have been confirmed at that time of the API call.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}